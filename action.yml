name: "Nukit"
description: "A reusable action that installs and runs Nushell code."
inputs:
  repo-token:
    description: "GitHub token with repo access"
    required: false
    default: ${{ github.token }}
  script:
    description: "NuShell script to execute"
    required: false
  skip_modules:
    description: "Skip the loading of the custom modules"
    required: false
    default: "false"
  skip_extras:
    description: "Skip intall of the extra tools"
    required: false
    default: "false"
  script-file:
    description: "Path to a NuShell script file to execute (not used for now)"
    required: false
  nu-version:
    description: "Version of NuShell to install (defaults to latest)"
    required: false
    default: "*"

runs:
  using: "composite"
  steps:
    - name: Check if NuShell is installed
      id: check-nu
      run: |
        if command -v nu &> /dev/null; then
          echo "nu_installed=true" >> $GITHUB_OUTPUT
        else
          echo "nu_installed=false" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: Install NuShell
      if: steps.check-nu.outputs.nu_installed == 'false'
      uses: hustcer/setup-nu@main
      with:
        version: ${{ inputs.nu-version }}

    - uses: taiki-e/install-action@v2
      if: ${{ inputs.skip_extras == 'false' }}
      with:
        tool: ripgrep,coreutils,fd-find

    - name: Execute NuShell script
      run: |
        let script = ($env.INPUT_SCRIPT? | default "")
        let script_file = $env.INPUT_SCRIPT-FILE?
        let skip_modules = ($env.INPUT_SKIP_MODULES == "true")

        if not $skip_modules {
          $"overlay use ($env.GITHUB_ACTION_PATH | path join toolkit.nu)\n" | save -a run_script.nu
        }
        $script | save -a run_script.nu

        if not ($script_file | is-empty) {
          $script_file | save -a run_script.nu
        }

        nu --commands "source run_script.nu"
        # nu --commands "open run_script.nu | nu-highlight"
      env:
        # NOTE: in composite actions this is not provided
        # the following mimics the standard naming (input -> env)
        INPUT_SCRIPT: ${{ inputs.script }}
        INPUT_SCRIPT-FILE: ${{ inputs.script-file }}
        INPUT_SKIP_MODULES: ${{ inputs.skip_modules }}
      shell: nu {0}

    # - name: Execute NuShell script
    #   run: |
    #
    #     if [ "${{ inputs.skip_modules }}" = "false" ]; then
    #      echo "overlay use $GITHUB_ACTION_PATH/toolkit.nu" > run_script.nu
    #     fi
    #
    #     if [ -n "${{ inputs.script }}" ]; then
    #       echo "${{ inputs.script }}" >> run_script.nu
    #     fi
    #
    #     if [ -n "${{ inputs.script-file }}" ]; then
    #       cat "${{ inputs.script-file }}" >> run_script.nu
    #     fi
    #     nu --commands "print \$env"
    #
    #     # nu --commands "source run_script.nu"
    #     nu --commands "open run_script.nu | nu-highlight"
    #
    #   shell: bash
